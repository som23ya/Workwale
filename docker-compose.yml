version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: workwale_postgres
    environment:
      POSTGRES_DB: workwale
      POSTGRES_USER: workwale
      POSTGRES_PASSWORD: workwale_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - workwale_network
    restart: unless-stopped

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: workwale_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - workwale_network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: workwale_backend
    environment:
      - DATABASE_URL=postgresql://workwale:workwale_password@postgres:5432/workwale
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=True
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - workwale_network
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: workwale_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - workwale_network
    restart: unless-stopped
    command: npm run dev

  # Celery Worker for Background Tasks
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: workwale_celery_worker
    environment:
      - DATABASE_URL=postgresql://workwale:workwale_password@postgres:5432/workwale
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - workwale_network
    restart: unless-stopped
    command: celery -A celery_app worker --loglevel=info

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: workwale_celery_beat
    environment:
      - DATABASE_URL=postgresql://workwale:workwale_password@postgres:5432/workwale
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - workwale_network
    restart: unless-stopped
    command: celery -A celery_app beat --loglevel=info

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: workwale_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - workwale_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  workwale_network:
    driver: bridge